@model IssuePilot.Models.ViewModels.ProjectMemberViewModel

@{
    ViewData["Title"] = "Mitglied bearbeiten";
}

<h2>Mitglied bearbeiten</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditMember">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ProjectId" />
            <input type="hidden" asp-for="UserId" />
            <input type="hidden" asp-for="ProjectRoleId" />

            <dl class="row">
                <dt class="col-sm-4">
                    Nutzername:
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.User.UserName)
                </dd>
                <dt class="col-sm-4">
                    <label>Aktuelle Rolle:</label>
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.ProjectRole.Title)
                </dd>
            </dl>
            
            <div class="form-group">
                <h5><label asp-for="NewProjectRoleId" class="control-label"> Rolle auswählen</label></h5>
                <select asp-for="NewProjectRoleId" class="form-control" asp-items="ViewBag.Roles">
                </select>
                <span asp-validation-for="NewProjectRoleId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Speichern" class="btn btn-primary" />
                <a class="btn btn-primary ml-2" asp-action="Members" asp-route-id="@Model.ProjectId">Zurück</a>
            </div>
        </form>
    </div>
</div>

<div>
    
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
