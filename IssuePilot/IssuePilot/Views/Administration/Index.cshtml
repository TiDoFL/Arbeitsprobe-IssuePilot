@using IssuePilot.Helper;
@model PaginatedList<IssuePilot.Models.User>

@{
    ViewBag.Title = "Alle Benutzer";
}
<h2>Alle Benutzer</h2>
@if (Model.Any())
{
    @if (User.IsInRole("Admin"))
    {<a class="btn btn-primary float-right mb-3" style="width:auto" asp-action="Create">
            + Benutzer
        </a>
    }
<form asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]">
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="basic-addon1"><img src="~/img/Search.svg" /></span>
        </div>
        <input class="form-control border-left-0" placeholder="Suchen" type="text" name="SearchString" value="@ViewData["CurrentFilter"]" data-toggle="tooltip" data-placement="top" title="Nach Titel oder Beschreibung suchen" />
    </div>
</form>


    <table class="table-sm table-hover text-break">
        <thead>
            <tr>
                <th scope="col" class="">
                    Benutzername
                </th>
                <th scope="col" class="">
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["FirstnameSortParm"]">Vorname</a>
                </th>
                <th scope="col" class="">
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["SurnameSortParm"]">Nachname</a>
                </th>
                <th scope="col" class="">
                    E-Mail
                </th>
                <th scope="col" class="">
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">Erstelldatum</a>
                </th>
                @if (User.IsInRole("Admin"))
                {
                    <th scope="col" class=""></th>
                    <th scope="col" class=""></th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td scope="row">
                        @Html.DisplayFor(modelItem => user.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => user.Firstname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => user.Surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => user.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => user.CreateDate)
                    </td>
                    @* Edit und Delete nur anzeigen, wenn der Benutzer nicht gelöscht wurde.*@
                    @if (User.IsInRole("Admin") && user.IsDeleted == false)
                    {
                        <td>
                            <a class="btn btn-primary" style="width:auto" asp-action="Edit" asp-route-id="@user.Id">Bearbeiten</a>

                        </td>
                        <td>
                            <a class="btn btn-primary" style="width:auto" asp-action="Delete" asp-route-id="@user.Id">Löschen</a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="card">
        <div class="card-header">
            Keine Benutzer vorhanden.
        </div>
        @if (User.IsInRole("Admin"))
        {
            <div class="card-body">
                <h5 class="card-title">
                    Benutzer den Button um einen neuen zu erstellen.
                </h5>

                <a class="btn btn-primary" style="width:auto" asp-controller="" asp-action="Create">
                    Erstelle neuen Benutzer
                </a>
            </div>
        }
    </div>

}



@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Zurück
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Weiter
</a>
